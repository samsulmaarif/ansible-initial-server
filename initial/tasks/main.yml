---
# tasks file for initial
- name: Setup repository and upgrade package
  include_tasks: "repo/{{ ansible_distribution }}.yml"

- name: Set timezone to "{{ server_timezone }}"
  timezone:
    name: "{{ server_timezone }}"

- name: Check if hostname is configured
  shell: >
      hostname
  register: current_hostname
  changed_when: False

- name: Set hostname to {{ inventory_hostname }} respectively
  shell: >
      hostnamectl set-hostname {{ inventory_hostname }}
  when: current_hostname.stdout != inventory_hostname

- name: Set hostname in /etc/hosts
  lineinfile:
    dest: /etc/hosts
    regexp: "{{ inventory_hostname }}"
    line: "{{ ansible_host }} {{ inventory_hostname }}"
    state: present

- name: Make sure we have a 'sudoers' group
  group:
    name: sudoers
    state: present

- name: Allow 'wheel' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudoers'
    line: '%sudoers ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: Create user with sudo access
  user:
    name: "{{ first_user }}"
    groups: sudoers
    generate_ssh_key: yes
    shell: /bin/bash
    home: /home/{{ first_user }}

- name: Set authorized key for user "{{ first_user }}" copying it from current user
  authorized_key:
    user: "{{ first_user }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  register: add_identity_key

- name: Disable empty password login
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "^#?PermitEmptyPasswords"
    line: "PermitEmptyPasswords no"
  notify: restart sshd

- name: Disable remote root login
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "^#?PermitRootLogin"
    line: "PermitRootLogin no"
  notify: restart sshd

- name: Disable password login
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "^#?PasswordAuthentication "
    line: "PasswordAuthentication no"
  when: add_identity_key is succeeded and not add_identity_key is skipped
  notify: restart sshd

- name: Enable PAM
  lineinfile:
    dest: "{{ sshd_config }}"
    regexp: "^#?UsePAM"
    line: "UsePAM yes"
  notify: restart sshd

- name: Setup firewall
  include_tasks: "firewall/{{ ansible_distribution }}.yml"
